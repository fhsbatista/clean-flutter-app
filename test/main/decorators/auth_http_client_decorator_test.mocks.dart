// Mocks generated by Mockito 5.1.0 from annotations
// in fordev/test/main/decorators/auth_http_client_decorator_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:fordev/data/cache/fetch_secure_cache_storage.dart' as _i2;
import 'package:fordev/data/http/http_client.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [FetchSecureCacheStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchSecureCacheStorage extends _i1.Mock
    implements _i2.FetchSecureCacheStorage {
  MockFetchSecureCacheStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String?> fetchSecure(String? key) =>
      (super.noSuchMethod(Invocation.method(#fetchSecure, [key]),
          returnValue: Future<String?>.value()) as _i3.Future<String?>);
}

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i4.HttpClient {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<dynamic> request(
          {String? url,
          String? method,
          Map<dynamic, dynamic>? headers,
          Map<dynamic, dynamic>? body}) =>
      (super.noSuchMethod(
          Invocation.method(#request, [],
              {#url: url, #method: method, #headers: headers, #body: body}),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
}
