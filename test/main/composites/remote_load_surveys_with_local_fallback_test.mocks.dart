// Mocks generated by Mockito 5.1.0 from annotations
// in fordev/test/main/composites/remote_load_surveys_with_local_fallback_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:fordev/data/http/http.dart' as _i2;
import 'package:fordev/data/usecases/load_surveys/remote_load_surveys.dart'
    as _i3;
import 'package:fordev/domain/entities/entities.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeHttpClient_0 extends _i1.Fake implements _i2.HttpClient {}

/// A class which mocks [RemoteLoadSurveys].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteLoadSurveys extends _i1.Mock implements _i3.RemoteLoadSurveys {
  MockRemoteLoadSurveys() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get url =>
      (super.noSuchMethod(Invocation.getter(#url), returnValue: '') as String);
  @override
  _i2.HttpClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeHttpClient_0()) as _i2.HttpClient);
  @override
  _i4.Future<List<_i5.SurveyEntity>> load() =>
      (super.noSuchMethod(Invocation.method(#load, []),
              returnValue:
                  Future<List<_i5.SurveyEntity>>.value(<_i5.SurveyEntity>[]))
          as _i4.Future<List<_i5.SurveyEntity>>);
}
